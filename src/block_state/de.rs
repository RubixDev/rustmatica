use std::{borrow::Cow, collections::HashMap};

use crate::schema;
use super::list::BlockState;

type _Self<'a> = schema::BlockState<'a>;

fn from_chunk_0<'a>(state: &BlockState<'a>) -> _Self<'a> {
    match state {
        BlockState::Air => _Self { name: Cow::Borrowed("minecraft:air"), properties: None },
        BlockState::Stone => _Self { name: Cow::Borrowed("minecraft:stone"), properties: None },
        BlockState::Granite => _Self { name: Cow::Borrowed("minecraft:granite"), properties: None },
        BlockState::PolishedGranite => _Self { name: Cow::Borrowed("minecraft:polished_granite"), properties: None },
        BlockState::Diorite => _Self { name: Cow::Borrowed("minecraft:diorite"), properties: None },
        BlockState::PolishedDiorite => _Self { name: Cow::Borrowed("minecraft:polished_diorite"), properties: None },
        BlockState::Andesite => _Self { name: Cow::Borrowed("minecraft:andesite"), properties: None },
        BlockState::PolishedAndesite => _Self { name: Cow::Borrowed("minecraft:polished_andesite"), properties: None },
        BlockState::GrassBlock { snowy } => _Self { name: Cow::Borrowed("minecraft:grass_block"), properties: Some(HashMap::from([(Cow::Borrowed("snowy"), Cow::Owned(snowy.to_string()))])), },
        BlockState::Dirt => _Self { name: Cow::Borrowed("minecraft:dirt"), properties: None },
        BlockState::CoarseDirt => _Self { name: Cow::Borrowed("minecraft:coarse_dirt"), properties: None },
        BlockState::Podzol { snowy } => _Self { name: Cow::Borrowed("minecraft:podzol"), properties: Some(HashMap::from([(Cow::Borrowed("snowy"), Cow::Owned(snowy.to_string()))])), },
        BlockState::Cobblestone => _Self { name: Cow::Borrowed("minecraft:cobblestone"), properties: None },
        BlockState::OakPlanks => _Self { name: Cow::Borrowed("minecraft:oak_planks"), properties: None },
        BlockState::SprucePlanks => _Self { name: Cow::Borrowed("minecraft:spruce_planks"), properties: None },
        BlockState::BirchPlanks => _Self { name: Cow::Borrowed("minecraft:birch_planks"), properties: None },
        BlockState::JunglePlanks => _Self { name: Cow::Borrowed("minecraft:jungle_planks"), properties: None },
        BlockState::AcaciaPlanks => _Self { name: Cow::Borrowed("minecraft:acacia_planks"), properties: None },
        BlockState::DarkOakPlanks => _Self { name: Cow::Borrowed("minecraft:dark_oak_planks"), properties: None },
        BlockState::OakSapling { stage } => _Self { name: Cow::Borrowed("minecraft:oak_sapling"), properties: Some(HashMap::from([(Cow::Borrowed("stage"), Cow::Owned(stage.to_string()))])), },
        BlockState::SpruceSapling { stage } => _Self { name: Cow::Borrowed("minecraft:spruce_sapling"), properties: Some(HashMap::from([(Cow::Borrowed("stage"), Cow::Owned(stage.to_string()))])), },
        BlockState::BirchSapling { stage } => _Self { name: Cow::Borrowed("minecraft:birch_sapling"), properties: Some(HashMap::from([(Cow::Borrowed("stage"), Cow::Owned(stage.to_string()))])), },
        BlockState::JungleSapling { stage } => _Self { name: Cow::Borrowed("minecraft:jungle_sapling"), properties: Some(HashMap::from([(Cow::Borrowed("stage"), Cow::Owned(stage.to_string()))])), },
        BlockState::AcaciaSapling { stage } => _Self { name: Cow::Borrowed("minecraft:acacia_sapling"), properties: Some(HashMap::from([(Cow::Borrowed("stage"), Cow::Owned(stage.to_string()))])), },
        BlockState::DarkOakSapling { stage } => _Self { name: Cow::Borrowed("minecraft:dark_oak_sapling"), properties: Some(HashMap::from([(Cow::Borrowed("stage"), Cow::Owned(stage.to_string()))])), },
        BlockState::Bedrock => _Self { name: Cow::Borrowed("minecraft:bedrock"), properties: None },
        BlockState::Water { level } => _Self { name: Cow::Borrowed("minecraft:water"), properties: Some(HashMap::from([(Cow::Borrowed("level"), Cow::Owned(level.to_string()))])), },
        BlockState::Lava { level } => _Self { name: Cow::Borrowed("minecraft:lava"), properties: Some(HashMap::from([(Cow::Borrowed("level"), Cow::Owned(level.to_string()))])), },
        BlockState::Sand => _Self { name: Cow::Borrowed("minecraft:sand"), properties: None },
        BlockState::RedSand => _Self { name: Cow::Borrowed("minecraft:red_sand"), properties: None },
        BlockState::Gravel => _Self { name: Cow::Borrowed("minecraft:gravel"), properties: None },
        BlockState::GoldOre => _Self { name: Cow::Borrowed("minecraft:gold_ore"), properties: None },
        BlockState::DeepslateGoldOre => _Self { name: Cow::Borrowed("minecraft:deepslate_gold_ore"), properties: None },
        BlockState::IronOre => _Self { name: Cow::Borrowed("minecraft:iron_ore"), properties: None },
        BlockState::DeepslateIronOre => _Self { name: Cow::Borrowed("minecraft:deepslate_iron_ore"), properties: None },
        BlockState::CoalOre => _Self { name: Cow::Borrowed("minecraft:coal_ore"), properties: None },
        BlockState::DeepslateCoalOre => _Self { name: Cow::Borrowed("minecraft:deepslate_coal_ore"), properties: None },
        BlockState::NetherGoldOre => _Self { name: Cow::Borrowed("minecraft:nether_gold_ore"), properties: None },
        BlockState::OakLog { axis } => _Self { name: Cow::Borrowed("minecraft:oak_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::SpruceLog { axis } => _Self { name: Cow::Borrowed("minecraft:spruce_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::BirchLog { axis } => _Self { name: Cow::Borrowed("minecraft:birch_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::JungleLog { axis } => _Self { name: Cow::Borrowed("minecraft:jungle_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::AcaciaLog { axis } => _Self { name: Cow::Borrowed("minecraft:acacia_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::DarkOakLog { axis } => _Self { name: Cow::Borrowed("minecraft:dark_oak_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedSpruceLog { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_spruce_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedBirchLog { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_birch_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedJungleLog { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_jungle_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedAcaciaLog { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_acacia_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedDarkOakLog { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_dark_oak_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedOakLog { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_oak_log"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::OakWood { axis } => _Self { name: Cow::Borrowed("minecraft:oak_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::SpruceWood { axis } => _Self { name: Cow::Borrowed("minecraft:spruce_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::BirchWood { axis } => _Self { name: Cow::Borrowed("minecraft:birch_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::JungleWood { axis } => _Self { name: Cow::Borrowed("minecraft:jungle_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::AcaciaWood { axis } => _Self { name: Cow::Borrowed("minecraft:acacia_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::DarkOakWood { axis } => _Self { name: Cow::Borrowed("minecraft:dark_oak_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedOakWood { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_oak_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedSpruceWood { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_spruce_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedBirchWood { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_birch_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedJungleWood { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_jungle_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedAcaciaWood { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_acacia_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedDarkOakWood { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_dark_oak_wood"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::OakLeaves { distance, persistent } => _Self { name: Cow::Borrowed("minecraft:oak_leaves"), properties: Some(HashMap::from([(Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("persistent"), Cow::Owned(persistent.to_string()))])), },
        BlockState::SpruceLeaves { distance, persistent } => _Self { name: Cow::Borrowed("minecraft:spruce_leaves"), properties: Some(HashMap::from([(Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("persistent"), Cow::Owned(persistent.to_string()))])), },
        BlockState::BirchLeaves { distance, persistent } => _Self { name: Cow::Borrowed("minecraft:birch_leaves"), properties: Some(HashMap::from([(Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("persistent"), Cow::Owned(persistent.to_string()))])), },
        BlockState::JungleLeaves { distance, persistent } => _Self { name: Cow::Borrowed("minecraft:jungle_leaves"), properties: Some(HashMap::from([(Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("persistent"), Cow::Owned(persistent.to_string()))])), },
        BlockState::AcaciaLeaves { distance, persistent } => _Self { name: Cow::Borrowed("minecraft:acacia_leaves"), properties: Some(HashMap::from([(Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("persistent"), Cow::Owned(persistent.to_string()))])), },
        BlockState::DarkOakLeaves { distance, persistent } => _Self { name: Cow::Borrowed("minecraft:dark_oak_leaves"), properties: Some(HashMap::from([(Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("persistent"), Cow::Owned(persistent.to_string()))])), },
        BlockState::AzaleaLeaves { distance, persistent } => _Self { name: Cow::Borrowed("minecraft:azalea_leaves"), properties: Some(HashMap::from([(Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("persistent"), Cow::Owned(persistent.to_string()))])), },
        BlockState::FloweringAzaleaLeaves { distance, persistent } => _Self { name: Cow::Borrowed("minecraft:flowering_azalea_leaves"), properties: Some(HashMap::from([(Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("persistent"), Cow::Owned(persistent.to_string()))])), },
        BlockState::Sponge => _Self { name: Cow::Borrowed("minecraft:sponge"), properties: None },
        BlockState::WetSponge => _Self { name: Cow::Borrowed("minecraft:wet_sponge"), properties: None },
        BlockState::Glass => _Self { name: Cow::Borrowed("minecraft:glass"), properties: None },
        BlockState::LapisOre => _Self { name: Cow::Borrowed("minecraft:lapis_ore"), properties: None },
        BlockState::DeepslateLapisOre => _Self { name: Cow::Borrowed("minecraft:deepslate_lapis_ore"), properties: None },
        BlockState::LapisBlock => _Self { name: Cow::Borrowed("minecraft:lapis_block"), properties: None },
        BlockState::Dispenser { facing, triggered } => _Self { name: Cow::Borrowed("minecraft:dispenser"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("triggered"), Cow::Owned(triggered.to_string()))])), },
        BlockState::Sandstone => _Self { name: Cow::Borrowed("minecraft:sandstone"), properties: None },
        BlockState::ChiseledSandstone => _Self { name: Cow::Borrowed("minecraft:chiseled_sandstone"), properties: None },
        BlockState::CutSandstone => _Self { name: Cow::Borrowed("minecraft:cut_sandstone"), properties: None },
        BlockState::NoteBlock { instrument, note, powered } => _Self { name: Cow::Borrowed("minecraft:note_block"), properties: Some(HashMap::from([(Cow::Borrowed("instrument"), Cow::Owned(instrument.to_string())), (Cow::Borrowed("note"), Cow::Owned(note.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::WhiteBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:white_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::OrangeBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:orange_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::MagentaBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:magenta_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::LightBlueBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:light_blue_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::YellowBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:yellow_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::LimeBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:lime_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::PinkBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:pink_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::GrayBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:gray_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::LightGrayBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:light_gray_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::CyanBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:cyan_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::PurpleBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:purple_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::BlueBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:blue_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::BrownBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:brown_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::GreenBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:green_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::RedBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:red_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::BlackBed { facing, occupied, part } => _Self { name: Cow::Borrowed("minecraft:black_bed"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("occupied"), Cow::Owned(occupied.to_string())), (Cow::Borrowed("part"), Cow::Owned(part.to_string()))])), },
        BlockState::PoweredRail { powered, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:powered_rail"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DetectorRail { powered, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:detector_rail"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::StickyPiston { extended, facing } => _Self { name: Cow::Borrowed("minecraft:sticky_piston"), properties: Some(HashMap::from([(Cow::Borrowed("extended"), Cow::Owned(extended.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Cobweb => _Self { name: Cow::Borrowed("minecraft:cobweb"), properties: None },
        BlockState::Grass => _Self { name: Cow::Borrowed("minecraft:grass"), properties: None },
        BlockState::Fern => _Self { name: Cow::Borrowed("minecraft:fern"), properties: None },
        BlockState::DeadBush => _Self { name: Cow::Borrowed("minecraft:dead_bush"), properties: None },
        BlockState::Seagrass => _Self { name: Cow::Borrowed("minecraft:seagrass"), properties: None },
        BlockState::TallSeagrass { half } => _Self { name: Cow::Borrowed("minecraft:tall_seagrass"), properties: Some(HashMap::from([(Cow::Borrowed("half"), Cow::Owned(half.to_string()))])), },
        BlockState::Piston { extended, facing } => _Self { name: Cow::Borrowed("minecraft:piston"), properties: Some(HashMap::from([(Cow::Borrowed("extended"), Cow::Owned(extended.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PistonHead { facing, short, r#type } => _Self { name: Cow::Borrowed("minecraft:piston_head"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("short"), Cow::Owned(short.to_string())), (Cow::Borrowed("type"), Cow::Owned(r#type.to_string()))])), },
        BlockState::WhiteWool => _Self { name: Cow::Borrowed("minecraft:white_wool"), properties: None },
        BlockState::OrangeWool => _Self { name: Cow::Borrowed("minecraft:orange_wool"), properties: None },
        BlockState::MagentaWool => _Self { name: Cow::Borrowed("minecraft:magenta_wool"), properties: None },
        BlockState::LightBlueWool => _Self { name: Cow::Borrowed("minecraft:light_blue_wool"), properties: None },
        BlockState::YellowWool => _Self { name: Cow::Borrowed("minecraft:yellow_wool"), properties: None },
        BlockState::LimeWool => _Self { name: Cow::Borrowed("minecraft:lime_wool"), properties: None },
        BlockState::PinkWool => _Self { name: Cow::Borrowed("minecraft:pink_wool"), properties: None },
        BlockState::GrayWool => _Self { name: Cow::Borrowed("minecraft:gray_wool"), properties: None },
        BlockState::LightGrayWool => _Self { name: Cow::Borrowed("minecraft:light_gray_wool"), properties: None },
        BlockState::CyanWool => _Self { name: Cow::Borrowed("minecraft:cyan_wool"), properties: None },
        BlockState::PurpleWool => _Self { name: Cow::Borrowed("minecraft:purple_wool"), properties: None },
        BlockState::BlueWool => _Self { name: Cow::Borrowed("minecraft:blue_wool"), properties: None },
        BlockState::BrownWool => _Self { name: Cow::Borrowed("minecraft:brown_wool"), properties: None },
        BlockState::GreenWool => _Self { name: Cow::Borrowed("minecraft:green_wool"), properties: None },
        BlockState::RedWool => _Self { name: Cow::Borrowed("minecraft:red_wool"), properties: None },
        BlockState::BlackWool => _Self { name: Cow::Borrowed("minecraft:black_wool"), properties: None },
        BlockState::MovingPiston { facing, r#type } => _Self { name: Cow::Borrowed("minecraft:moving_piston"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("type"), Cow::Owned(r#type.to_string()))])), },
        BlockState::Dandelion => _Self { name: Cow::Borrowed("minecraft:dandelion"), properties: None },
        BlockState::Poppy => _Self { name: Cow::Borrowed("minecraft:poppy"), properties: None },
        BlockState::BlueOrchid => _Self { name: Cow::Borrowed("minecraft:blue_orchid"), properties: None },
        BlockState::Allium => _Self { name: Cow::Borrowed("minecraft:allium"), properties: None },
        BlockState::AzureBluet => _Self { name: Cow::Borrowed("minecraft:azure_bluet"), properties: None },
        BlockState::RedTulip => _Self { name: Cow::Borrowed("minecraft:red_tulip"), properties: None },
        BlockState::OrangeTulip => _Self { name: Cow::Borrowed("minecraft:orange_tulip"), properties: None },
        BlockState::WhiteTulip => _Self { name: Cow::Borrowed("minecraft:white_tulip"), properties: None },
        BlockState::PinkTulip => _Self { name: Cow::Borrowed("minecraft:pink_tulip"), properties: None },
        BlockState::OxeyeDaisy => _Self { name: Cow::Borrowed("minecraft:oxeye_daisy"), properties: None },
        BlockState::Cornflower => _Self { name: Cow::Borrowed("minecraft:cornflower"), properties: None },
        BlockState::WitherRose => _Self { name: Cow::Borrowed("minecraft:wither_rose"), properties: None },
        BlockState::LilyOfTheValley => _Self { name: Cow::Borrowed("minecraft:lily_of_the_valley"), properties: None },
        BlockState::BrownMushroom => _Self { name: Cow::Borrowed("minecraft:brown_mushroom"), properties: None },
        BlockState::RedMushroom => _Self { name: Cow::Borrowed("minecraft:red_mushroom"), properties: None },
        BlockState::GoldBlock => _Self { name: Cow::Borrowed("minecraft:gold_block"), properties: None },
        BlockState::IronBlock => _Self { name: Cow::Borrowed("minecraft:iron_block"), properties: None },
        BlockState::Bricks => _Self { name: Cow::Borrowed("minecraft:bricks"), properties: None },
        BlockState::Tnt { unstable } => _Self { name: Cow::Borrowed("minecraft:tnt"), properties: Some(HashMap::from([(Cow::Borrowed("unstable"), Cow::Owned(unstable.to_string()))])), },
        BlockState::Bookshelf => _Self { name: Cow::Borrowed("minecraft:bookshelf"), properties: None },
        BlockState::MossyCobblestone => _Self { name: Cow::Borrowed("minecraft:mossy_cobblestone"), properties: None },
        BlockState::Obsidian => _Self { name: Cow::Borrowed("minecraft:obsidian"), properties: None },
        BlockState::Torch => _Self { name: Cow::Borrowed("minecraft:torch"), properties: None },
        BlockState::WallTorch { facing } => _Self { name: Cow::Borrowed("minecraft:wall_torch"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Fire { age, east, north, south, up, west } => _Self { name: Cow::Borrowed("minecraft:fire"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string())), (Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::SoulFire => _Self { name: Cow::Borrowed("minecraft:soul_fire"), properties: None },
        BlockState::Spawner => _Self { name: Cow::Borrowed("minecraft:spawner"), properties: None },
        BlockState::OakStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:oak_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Chest { facing, r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:chest"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::RedstoneWire { east, north, power, south, west } => _Self { name: Cow::Borrowed("minecraft:redstone_wire"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("power"), Cow::Owned(power.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::DiamondOre => _Self { name: Cow::Borrowed("minecraft:diamond_ore"), properties: None },
        BlockState::DeepslateDiamondOre => _Self { name: Cow::Borrowed("minecraft:deepslate_diamond_ore"), properties: None },
        BlockState::DiamondBlock => _Self { name: Cow::Borrowed("minecraft:diamond_block"), properties: None },
        BlockState::CraftingTable => _Self { name: Cow::Borrowed("minecraft:crafting_table"), properties: None },
        BlockState::Wheat { age } => _Self { name: Cow::Borrowed("minecraft:wheat"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::Farmland { moisture } => _Self { name: Cow::Borrowed("minecraft:farmland"), properties: Some(HashMap::from([(Cow::Borrowed("moisture"), Cow::Owned(moisture.to_string()))])), },
        BlockState::Furnace { facing, lit } => _Self { name: Cow::Borrowed("minecraft:furnace"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::OakSign { rotation, waterlogged } => _Self { name: Cow::Borrowed("minecraft:oak_sign"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SpruceSign { rotation, waterlogged } => _Self { name: Cow::Borrowed("minecraft:spruce_sign"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BirchSign { rotation, waterlogged } => _Self { name: Cow::Borrowed("minecraft:birch_sign"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::AcaciaSign { rotation, waterlogged } => _Self { name: Cow::Borrowed("minecraft:acacia_sign"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::JungleSign { rotation, waterlogged } => _Self { name: Cow::Borrowed("minecraft:jungle_sign"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DarkOakSign { rotation, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dark_oak_sign"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::OakDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:oak_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::Ladder { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:ladder"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Rail { shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:rail"), properties: Some(HashMap::from([(Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CobblestoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cobblestone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::OakWallSign { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:oak_wall_sign"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SpruceWallSign { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:spruce_wall_sign"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BirchWallSign { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:birch_wall_sign"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::AcaciaWallSign { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:acacia_wall_sign"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::JungleWallSign { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:jungle_wall_sign"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DarkOakWallSign { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dark_oak_wall_sign"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Lever { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:lever"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::StonePressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:stone_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::IronDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:iron_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::OakPressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:oak_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::SprucePressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:spruce_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::BirchPressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:birch_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::JunglePressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:jungle_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::AcaciaPressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:acacia_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::DarkOakPressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:dark_oak_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::RedstoneOre { lit } => _Self { name: Cow::Borrowed("minecraft:redstone_ore"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::DeepslateRedstoneOre { lit } => _Self { name: Cow::Borrowed("minecraft:deepslate_redstone_ore"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::RedstoneTorch { lit } => _Self { name: Cow::Borrowed("minecraft:redstone_torch"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::RedstoneWallTorch { facing, lit } => _Self { name: Cow::Borrowed("minecraft:redstone_wall_torch"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::StoneButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:stone_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::Snow { layers } => _Self { name: Cow::Borrowed("minecraft:snow"), properties: Some(HashMap::from([(Cow::Borrowed("layers"), Cow::Owned(layers.to_string()))])), },
        BlockState::Ice => _Self { name: Cow::Borrowed("minecraft:ice"), properties: None },
        BlockState::SnowBlock => _Self { name: Cow::Borrowed("minecraft:snow_block"), properties: None },
        BlockState::Cactus { age } => _Self { name: Cow::Borrowed("minecraft:cactus"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::Clay => _Self { name: Cow::Borrowed("minecraft:clay"), properties: None },
        BlockState::SugarCane { age } => _Self { name: Cow::Borrowed("minecraft:sugar_cane"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::Jukebox { has_record } => _Self { name: Cow::Borrowed("minecraft:jukebox"), properties: Some(HashMap::from([(Cow::Borrowed("has_record"), Cow::Owned(has_record.to_string()))])), },
        BlockState::OakFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:oak_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        _ => from_chunk_1(state),
    }
}
fn from_chunk_1<'a>(state: &BlockState<'a>) -> _Self<'a> {
    match state {
        BlockState::Pumpkin => _Self { name: Cow::Borrowed("minecraft:pumpkin"), properties: None },
        BlockState::Netherrack => _Self { name: Cow::Borrowed("minecraft:netherrack"), properties: None },
        BlockState::SoulSand => _Self { name: Cow::Borrowed("minecraft:soul_sand"), properties: None },
        BlockState::SoulSoil => _Self { name: Cow::Borrowed("minecraft:soul_soil"), properties: None },
        BlockState::Basalt { axis } => _Self { name: Cow::Borrowed("minecraft:basalt"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::PolishedBasalt { axis } => _Self { name: Cow::Borrowed("minecraft:polished_basalt"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::SoulTorch => _Self { name: Cow::Borrowed("minecraft:soul_torch"), properties: None },
        BlockState::SoulWallTorch { facing } => _Self { name: Cow::Borrowed("minecraft:soul_wall_torch"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Glowstone => _Self { name: Cow::Borrowed("minecraft:glowstone"), properties: None },
        BlockState::NetherPortal { axis } => _Self { name: Cow::Borrowed("minecraft:nether_portal"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::CarvedPumpkin { facing } => _Self { name: Cow::Borrowed("minecraft:carved_pumpkin"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::JackOLantern { facing } => _Self { name: Cow::Borrowed("minecraft:jack_o_lantern"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Cake { bites } => _Self { name: Cow::Borrowed("minecraft:cake"), properties: Some(HashMap::from([(Cow::Borrowed("bites"), Cow::Owned(bites.to_string()))])), },
        BlockState::Repeater { delay, facing, locked, powered } => _Self { name: Cow::Borrowed("minecraft:repeater"), properties: Some(HashMap::from([(Cow::Borrowed("delay"), Cow::Owned(delay.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("locked"), Cow::Owned(locked.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::WhiteStainedGlass => _Self { name: Cow::Borrowed("minecraft:white_stained_glass"), properties: None },
        BlockState::OrangeStainedGlass => _Self { name: Cow::Borrowed("minecraft:orange_stained_glass"), properties: None },
        BlockState::MagentaStainedGlass => _Self { name: Cow::Borrowed("minecraft:magenta_stained_glass"), properties: None },
        BlockState::LightBlueStainedGlass => _Self { name: Cow::Borrowed("minecraft:light_blue_stained_glass"), properties: None },
        BlockState::YellowStainedGlass => _Self { name: Cow::Borrowed("minecraft:yellow_stained_glass"), properties: None },
        BlockState::LimeStainedGlass => _Self { name: Cow::Borrowed("minecraft:lime_stained_glass"), properties: None },
        BlockState::PinkStainedGlass => _Self { name: Cow::Borrowed("minecraft:pink_stained_glass"), properties: None },
        BlockState::GrayStainedGlass => _Self { name: Cow::Borrowed("minecraft:gray_stained_glass"), properties: None },
        BlockState::LightGrayStainedGlass => _Self { name: Cow::Borrowed("minecraft:light_gray_stained_glass"), properties: None },
        BlockState::CyanStainedGlass => _Self { name: Cow::Borrowed("minecraft:cyan_stained_glass"), properties: None },
        BlockState::PurpleStainedGlass => _Self { name: Cow::Borrowed("minecraft:purple_stained_glass"), properties: None },
        BlockState::BlueStainedGlass => _Self { name: Cow::Borrowed("minecraft:blue_stained_glass"), properties: None },
        BlockState::BrownStainedGlass => _Self { name: Cow::Borrowed("minecraft:brown_stained_glass"), properties: None },
        BlockState::GreenStainedGlass => _Self { name: Cow::Borrowed("minecraft:green_stained_glass"), properties: None },
        BlockState::RedStainedGlass => _Self { name: Cow::Borrowed("minecraft:red_stained_glass"), properties: None },
        BlockState::BlackStainedGlass => _Self { name: Cow::Borrowed("minecraft:black_stained_glass"), properties: None },
        BlockState::OakTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:oak_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SpruceTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:spruce_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BirchTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:birch_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::JungleTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:jungle_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::AcaciaTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:acacia_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DarkOakTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dark_oak_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::StoneBricks => _Self { name: Cow::Borrowed("minecraft:stone_bricks"), properties: None },
        BlockState::MossyStoneBricks => _Self { name: Cow::Borrowed("minecraft:mossy_stone_bricks"), properties: None },
        BlockState::CrackedStoneBricks => _Self { name: Cow::Borrowed("minecraft:cracked_stone_bricks"), properties: None },
        BlockState::ChiseledStoneBricks => _Self { name: Cow::Borrowed("minecraft:chiseled_stone_bricks"), properties: None },
        BlockState::InfestedStone => _Self { name: Cow::Borrowed("minecraft:infested_stone"), properties: None },
        BlockState::InfestedCobblestone => _Self { name: Cow::Borrowed("minecraft:infested_cobblestone"), properties: None },
        BlockState::InfestedStoneBricks => _Self { name: Cow::Borrowed("minecraft:infested_stone_bricks"), properties: None },
        BlockState::InfestedMossyStoneBricks => _Self { name: Cow::Borrowed("minecraft:infested_mossy_stone_bricks"), properties: None },
        BlockState::InfestedCrackedStoneBricks => _Self { name: Cow::Borrowed("minecraft:infested_cracked_stone_bricks"), properties: None },
        BlockState::InfestedChiseledStoneBricks => _Self { name: Cow::Borrowed("minecraft:infested_chiseled_stone_bricks"), properties: None },
        BlockState::BrownMushroomBlock { down, east, north, south, up, west } => _Self { name: Cow::Borrowed("minecraft:brown_mushroom_block"), properties: Some(HashMap::from([(Cow::Borrowed("down"), Cow::Owned(down.to_string())), (Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::RedMushroomBlock { down, east, north, south, up, west } => _Self { name: Cow::Borrowed("minecraft:red_mushroom_block"), properties: Some(HashMap::from([(Cow::Borrowed("down"), Cow::Owned(down.to_string())), (Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::MushroomStem { down, east, north, south, up, west } => _Self { name: Cow::Borrowed("minecraft:mushroom_stem"), properties: Some(HashMap::from([(Cow::Borrowed("down"), Cow::Owned(down.to_string())), (Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::IronBars { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:iron_bars"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::Chain { axis, waterlogged } => _Self { name: Cow::Borrowed("minecraft:chain"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::GlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::Melon => _Self { name: Cow::Borrowed("minecraft:melon"), properties: None },
        BlockState::AttachedPumpkinStem { facing } => _Self { name: Cow::Borrowed("minecraft:attached_pumpkin_stem"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::AttachedMelonStem { facing } => _Self { name: Cow::Borrowed("minecraft:attached_melon_stem"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PumpkinStem { age } => _Self { name: Cow::Borrowed("minecraft:pumpkin_stem"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::MelonStem { age } => _Self { name: Cow::Borrowed("minecraft:melon_stem"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::Vine { east, north, south, up, west } => _Self { name: Cow::Borrowed("minecraft:vine"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::GlowLichen { down, east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:glow_lichen"), properties: Some(HashMap::from([(Cow::Borrowed("down"), Cow::Owned(down.to_string())), (Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::OakFenceGate { facing, in_wall, open, powered } => _Self { name: Cow::Borrowed("minecraft:oak_fence_gate"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("in_wall"), Cow::Owned(in_wall.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::BrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::StoneBrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:stone_brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Mycelium { snowy } => _Self { name: Cow::Borrowed("minecraft:mycelium"), properties: Some(HashMap::from([(Cow::Borrowed("snowy"), Cow::Owned(snowy.to_string()))])), },
        BlockState::LilyPad => _Self { name: Cow::Borrowed("minecraft:lily_pad"), properties: None },
        BlockState::NetherBricks => _Self { name: Cow::Borrowed("minecraft:nether_bricks"), properties: None },
        BlockState::NetherBrickFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:nether_brick_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::NetherBrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:nether_brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::NetherWart { age } => _Self { name: Cow::Borrowed("minecraft:nether_wart"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::EnchantingTable => _Self { name: Cow::Borrowed("minecraft:enchanting_table"), properties: None },
        BlockState::BrewingStand { has_bottle_0, has_bottle_1, has_bottle_2 } => _Self { name: Cow::Borrowed("minecraft:brewing_stand"), properties: Some(HashMap::from([(Cow::Borrowed("has_bottle_0"), Cow::Owned(has_bottle_0.to_string())), (Cow::Borrowed("has_bottle_1"), Cow::Owned(has_bottle_1.to_string())), (Cow::Borrowed("has_bottle_2"), Cow::Owned(has_bottle_2.to_string()))])), },
        BlockState::Cauldron => _Self { name: Cow::Borrowed("minecraft:cauldron"), properties: None },
        BlockState::WaterCauldron { level } => _Self { name: Cow::Borrowed("minecraft:water_cauldron"), properties: Some(HashMap::from([(Cow::Borrowed("level"), Cow::Owned(level.to_string()))])), },
        BlockState::LavaCauldron => _Self { name: Cow::Borrowed("minecraft:lava_cauldron"), properties: None },
        BlockState::PowderSnowCauldron { level } => _Self { name: Cow::Borrowed("minecraft:powder_snow_cauldron"), properties: Some(HashMap::from([(Cow::Borrowed("level"), Cow::Owned(level.to_string()))])), },
        BlockState::EndPortal => _Self { name: Cow::Borrowed("minecraft:end_portal"), properties: None },
        BlockState::EndPortalFrame { eye, facing } => _Self { name: Cow::Borrowed("minecraft:end_portal_frame"), properties: Some(HashMap::from([(Cow::Borrowed("eye"), Cow::Owned(eye.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::EndStone => _Self { name: Cow::Borrowed("minecraft:end_stone"), properties: None },
        BlockState::DragonEgg => _Self { name: Cow::Borrowed("minecraft:dragon_egg"), properties: None },
        BlockState::RedstoneLamp { lit } => _Self { name: Cow::Borrowed("minecraft:redstone_lamp"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::Cocoa { age, facing } => _Self { name: Cow::Borrowed("minecraft:cocoa"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::SandstoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:sandstone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::EmeraldOre => _Self { name: Cow::Borrowed("minecraft:emerald_ore"), properties: None },
        BlockState::DeepslateEmeraldOre => _Self { name: Cow::Borrowed("minecraft:deepslate_emerald_ore"), properties: None },
        BlockState::EnderChest { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:ender_chest"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::TripwireHook { attached, facing, powered } => _Self { name: Cow::Borrowed("minecraft:tripwire_hook"), properties: Some(HashMap::from([(Cow::Borrowed("attached"), Cow::Owned(attached.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::Tripwire { attached, disarmed, east, north, powered, south, west } => _Self { name: Cow::Borrowed("minecraft:tripwire"), properties: Some(HashMap::from([(Cow::Borrowed("attached"), Cow::Owned(attached.to_string())), (Cow::Borrowed("disarmed"), Cow::Owned(disarmed.to_string())), (Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::EmeraldBlock => _Self { name: Cow::Borrowed("minecraft:emerald_block"), properties: None },
        BlockState::SpruceStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:spruce_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BirchStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:birch_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::JungleStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:jungle_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CommandBlock { conditional, facing } => _Self { name: Cow::Borrowed("minecraft:command_block"), properties: Some(HashMap::from([(Cow::Borrowed("conditional"), Cow::Owned(conditional.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Beacon => _Self { name: Cow::Borrowed("minecraft:beacon"), properties: None },
        BlockState::CobblestoneWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:cobblestone_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::MossyCobblestoneWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:mossy_cobblestone_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::FlowerPot => _Self { name: Cow::Borrowed("minecraft:flower_pot"), properties: None },
        BlockState::PottedOakSapling => _Self { name: Cow::Borrowed("minecraft:potted_oak_sapling"), properties: None },
        BlockState::PottedSpruceSapling => _Self { name: Cow::Borrowed("minecraft:potted_spruce_sapling"), properties: None },
        BlockState::PottedBirchSapling => _Self { name: Cow::Borrowed("minecraft:potted_birch_sapling"), properties: None },
        BlockState::PottedJungleSapling => _Self { name: Cow::Borrowed("minecraft:potted_jungle_sapling"), properties: None },
        BlockState::PottedAcaciaSapling => _Self { name: Cow::Borrowed("minecraft:potted_acacia_sapling"), properties: None },
        BlockState::PottedDarkOakSapling => _Self { name: Cow::Borrowed("minecraft:potted_dark_oak_sapling"), properties: None },
        BlockState::PottedFern => _Self { name: Cow::Borrowed("minecraft:potted_fern"), properties: None },
        BlockState::PottedDandelion => _Self { name: Cow::Borrowed("minecraft:potted_dandelion"), properties: None },
        BlockState::PottedPoppy => _Self { name: Cow::Borrowed("minecraft:potted_poppy"), properties: None },
        BlockState::PottedBlueOrchid => _Self { name: Cow::Borrowed("minecraft:potted_blue_orchid"), properties: None },
        BlockState::PottedAllium => _Self { name: Cow::Borrowed("minecraft:potted_allium"), properties: None },
        BlockState::PottedAzureBluet => _Self { name: Cow::Borrowed("minecraft:potted_azure_bluet"), properties: None },
        BlockState::PottedRedTulip => _Self { name: Cow::Borrowed("minecraft:potted_red_tulip"), properties: None },
        BlockState::PottedOrangeTulip => _Self { name: Cow::Borrowed("minecraft:potted_orange_tulip"), properties: None },
        BlockState::PottedWhiteTulip => _Self { name: Cow::Borrowed("minecraft:potted_white_tulip"), properties: None },
        BlockState::PottedPinkTulip => _Self { name: Cow::Borrowed("minecraft:potted_pink_tulip"), properties: None },
        BlockState::PottedOxeyeDaisy => _Self { name: Cow::Borrowed("minecraft:potted_oxeye_daisy"), properties: None },
        BlockState::PottedCornflower => _Self { name: Cow::Borrowed("minecraft:potted_cornflower"), properties: None },
        BlockState::PottedLilyOfTheValley => _Self { name: Cow::Borrowed("minecraft:potted_lily_of_the_valley"), properties: None },
        BlockState::PottedWitherRose => _Self { name: Cow::Borrowed("minecraft:potted_wither_rose"), properties: None },
        BlockState::PottedRedMushroom => _Self { name: Cow::Borrowed("minecraft:potted_red_mushroom"), properties: None },
        BlockState::PottedBrownMushroom => _Self { name: Cow::Borrowed("minecraft:potted_brown_mushroom"), properties: None },
        BlockState::PottedDeadBush => _Self { name: Cow::Borrowed("minecraft:potted_dead_bush"), properties: None },
        BlockState::PottedCactus => _Self { name: Cow::Borrowed("minecraft:potted_cactus"), properties: None },
        BlockState::Carrots { age } => _Self { name: Cow::Borrowed("minecraft:carrots"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::Potatoes { age } => _Self { name: Cow::Borrowed("minecraft:potatoes"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::OakButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:oak_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::SpruceButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:spruce_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::BirchButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:birch_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::JungleButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:jungle_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::AcaciaButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:acacia_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::DarkOakButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:dark_oak_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::SkeletonSkull { rotation } => _Self { name: Cow::Borrowed("minecraft:skeleton_skull"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::SkeletonWallSkull { facing } => _Self { name: Cow::Borrowed("minecraft:skeleton_wall_skull"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::WitherSkeletonSkull { rotation } => _Self { name: Cow::Borrowed("minecraft:wither_skeleton_skull"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::WitherSkeletonWallSkull { facing } => _Self { name: Cow::Borrowed("minecraft:wither_skeleton_wall_skull"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::ZombieHead { rotation } => _Self { name: Cow::Borrowed("minecraft:zombie_head"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::ZombieWallHead { facing } => _Self { name: Cow::Borrowed("minecraft:zombie_wall_head"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PlayerHead { rotation } => _Self { name: Cow::Borrowed("minecraft:player_head"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::PlayerWallHead { facing } => _Self { name: Cow::Borrowed("minecraft:player_wall_head"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::CreeperHead { rotation } => _Self { name: Cow::Borrowed("minecraft:creeper_head"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::CreeperWallHead { facing } => _Self { name: Cow::Borrowed("minecraft:creeper_wall_head"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::DragonHead { rotation } => _Self { name: Cow::Borrowed("minecraft:dragon_head"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::DragonWallHead { facing } => _Self { name: Cow::Borrowed("minecraft:dragon_wall_head"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Anvil { facing } => _Self { name: Cow::Borrowed("minecraft:anvil"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::ChippedAnvil { facing } => _Self { name: Cow::Borrowed("minecraft:chipped_anvil"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::DamagedAnvil { facing } => _Self { name: Cow::Borrowed("minecraft:damaged_anvil"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::TrappedChest { facing, r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:trapped_chest"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::LightWeightedPressurePlate { power } => _Self { name: Cow::Borrowed("minecraft:light_weighted_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("power"), Cow::Owned(power.to_string()))])), },
        BlockState::HeavyWeightedPressurePlate { power } => _Self { name: Cow::Borrowed("minecraft:heavy_weighted_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("power"), Cow::Owned(power.to_string()))])), },
        BlockState::Comparator { facing, mode, powered } => _Self { name: Cow::Borrowed("minecraft:comparator"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("mode"), Cow::Owned(mode.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::DaylightDetector { inverted, power } => _Self { name: Cow::Borrowed("minecraft:daylight_detector"), properties: Some(HashMap::from([(Cow::Borrowed("inverted"), Cow::Owned(inverted.to_string())), (Cow::Borrowed("power"), Cow::Owned(power.to_string()))])), },
        BlockState::RedstoneBlock => _Self { name: Cow::Borrowed("minecraft:redstone_block"), properties: None },
        BlockState::NetherQuartzOre => _Self { name: Cow::Borrowed("minecraft:nether_quartz_ore"), properties: None },
        BlockState::Hopper { enabled, facing } => _Self { name: Cow::Borrowed("minecraft:hopper"), properties: Some(HashMap::from([(Cow::Borrowed("enabled"), Cow::Owned(enabled.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::QuartzBlock => _Self { name: Cow::Borrowed("minecraft:quartz_block"), properties: None },
        BlockState::ChiseledQuartzBlock => _Self { name: Cow::Borrowed("minecraft:chiseled_quartz_block"), properties: None },
        BlockState::QuartzPillar { axis } => _Self { name: Cow::Borrowed("minecraft:quartz_pillar"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::QuartzStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:quartz_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::ActivatorRail { powered, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:activator_rail"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Dropper { facing, triggered } => _Self { name: Cow::Borrowed("minecraft:dropper"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("triggered"), Cow::Owned(triggered.to_string()))])), },
        BlockState::WhiteTerracotta => _Self { name: Cow::Borrowed("minecraft:white_terracotta"), properties: None },
        BlockState::OrangeTerracotta => _Self { name: Cow::Borrowed("minecraft:orange_terracotta"), properties: None },
        BlockState::MagentaTerracotta => _Self { name: Cow::Borrowed("minecraft:magenta_terracotta"), properties: None },
        BlockState::LightBlueTerracotta => _Self { name: Cow::Borrowed("minecraft:light_blue_terracotta"), properties: None },
        BlockState::YellowTerracotta => _Self { name: Cow::Borrowed("minecraft:yellow_terracotta"), properties: None },
        BlockState::LimeTerracotta => _Self { name: Cow::Borrowed("minecraft:lime_terracotta"), properties: None },
        BlockState::PinkTerracotta => _Self { name: Cow::Borrowed("minecraft:pink_terracotta"), properties: None },
        BlockState::GrayTerracotta => _Self { name: Cow::Borrowed("minecraft:gray_terracotta"), properties: None },
        BlockState::LightGrayTerracotta => _Self { name: Cow::Borrowed("minecraft:light_gray_terracotta"), properties: None },
        BlockState::CyanTerracotta => _Self { name: Cow::Borrowed("minecraft:cyan_terracotta"), properties: None },
        BlockState::PurpleTerracotta => _Self { name: Cow::Borrowed("minecraft:purple_terracotta"), properties: None },
        BlockState::BlueTerracotta => _Self { name: Cow::Borrowed("minecraft:blue_terracotta"), properties: None },
        BlockState::BrownTerracotta => _Self { name: Cow::Borrowed("minecraft:brown_terracotta"), properties: None },
        BlockState::GreenTerracotta => _Self { name: Cow::Borrowed("minecraft:green_terracotta"), properties: None },
        BlockState::RedTerracotta => _Self { name: Cow::Borrowed("minecraft:red_terracotta"), properties: None },
        BlockState::BlackTerracotta => _Self { name: Cow::Borrowed("minecraft:black_terracotta"), properties: None },
        BlockState::WhiteStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:white_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::OrangeStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:orange_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::MagentaStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:magenta_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::LightBlueStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:light_blue_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::YellowStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:yellow_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::LimeStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:lime_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::PinkStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:pink_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::GrayStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:gray_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::LightGrayStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:light_gray_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::CyanStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:cyan_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::PurpleStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:purple_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::BlueStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:blue_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::BrownStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:brown_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::GreenStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:green_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::RedStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:red_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::BlackStainedGlassPane { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:black_stained_glass_pane"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::AcaciaStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:acacia_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DarkOakStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dark_oak_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SlimeBlock => _Self { name: Cow::Borrowed("minecraft:slime_block"), properties: None },
        BlockState::Barrier => _Self { name: Cow::Borrowed("minecraft:barrier"), properties: None },
        BlockState::Light { level, waterlogged } => _Self { name: Cow::Borrowed("minecraft:light"), properties: Some(HashMap::from([(Cow::Borrowed("level"), Cow::Owned(level.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::IronTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:iron_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Prismarine => _Self { name: Cow::Borrowed("minecraft:prismarine"), properties: None },
        BlockState::PrismarineBricks => _Self { name: Cow::Borrowed("minecraft:prismarine_bricks"), properties: None },
        BlockState::DarkPrismarine => _Self { name: Cow::Borrowed("minecraft:dark_prismarine"), properties: None },
        BlockState::PrismarineStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:prismarine_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PrismarineBrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:prismarine_brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DarkPrismarineStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dark_prismarine_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        _ => from_chunk_2(state),
    }
}
fn from_chunk_2<'a>(state: &BlockState<'a>) -> _Self<'a> {
    match state {
        BlockState::PrismarineSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:prismarine_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PrismarineBrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:prismarine_brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DarkPrismarineSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dark_prismarine_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SeaLantern => _Self { name: Cow::Borrowed("minecraft:sea_lantern"), properties: None },
        BlockState::HayBlock { axis } => _Self { name: Cow::Borrowed("minecraft:hay_block"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::WhiteCarpet => _Self { name: Cow::Borrowed("minecraft:white_carpet"), properties: None },
        BlockState::OrangeCarpet => _Self { name: Cow::Borrowed("minecraft:orange_carpet"), properties: None },
        BlockState::MagentaCarpet => _Self { name: Cow::Borrowed("minecraft:magenta_carpet"), properties: None },
        BlockState::LightBlueCarpet => _Self { name: Cow::Borrowed("minecraft:light_blue_carpet"), properties: None },
        BlockState::YellowCarpet => _Self { name: Cow::Borrowed("minecraft:yellow_carpet"), properties: None },
        BlockState::LimeCarpet => _Self { name: Cow::Borrowed("minecraft:lime_carpet"), properties: None },
        BlockState::PinkCarpet => _Self { name: Cow::Borrowed("minecraft:pink_carpet"), properties: None },
        BlockState::GrayCarpet => _Self { name: Cow::Borrowed("minecraft:gray_carpet"), properties: None },
        BlockState::LightGrayCarpet => _Self { name: Cow::Borrowed("minecraft:light_gray_carpet"), properties: None },
        BlockState::CyanCarpet => _Self { name: Cow::Borrowed("minecraft:cyan_carpet"), properties: None },
        BlockState::PurpleCarpet => _Self { name: Cow::Borrowed("minecraft:purple_carpet"), properties: None },
        BlockState::BlueCarpet => _Self { name: Cow::Borrowed("minecraft:blue_carpet"), properties: None },
        BlockState::BrownCarpet => _Self { name: Cow::Borrowed("minecraft:brown_carpet"), properties: None },
        BlockState::GreenCarpet => _Self { name: Cow::Borrowed("minecraft:green_carpet"), properties: None },
        BlockState::RedCarpet => _Self { name: Cow::Borrowed("minecraft:red_carpet"), properties: None },
        BlockState::BlackCarpet => _Self { name: Cow::Borrowed("minecraft:black_carpet"), properties: None },
        BlockState::Terracotta => _Self { name: Cow::Borrowed("minecraft:terracotta"), properties: None },
        BlockState::CoalBlock => _Self { name: Cow::Borrowed("minecraft:coal_block"), properties: None },
        BlockState::PackedIce => _Self { name: Cow::Borrowed("minecraft:packed_ice"), properties: None },
        BlockState::Sunflower { half } => _Self { name: Cow::Borrowed("minecraft:sunflower"), properties: Some(HashMap::from([(Cow::Borrowed("half"), Cow::Owned(half.to_string()))])), },
        BlockState::Lilac { half } => _Self { name: Cow::Borrowed("minecraft:lilac"), properties: Some(HashMap::from([(Cow::Borrowed("half"), Cow::Owned(half.to_string()))])), },
        BlockState::RoseBush { half } => _Self { name: Cow::Borrowed("minecraft:rose_bush"), properties: Some(HashMap::from([(Cow::Borrowed("half"), Cow::Owned(half.to_string()))])), },
        BlockState::Peony { half } => _Self { name: Cow::Borrowed("minecraft:peony"), properties: Some(HashMap::from([(Cow::Borrowed("half"), Cow::Owned(half.to_string()))])), },
        BlockState::TallGrass { half } => _Self { name: Cow::Borrowed("minecraft:tall_grass"), properties: Some(HashMap::from([(Cow::Borrowed("half"), Cow::Owned(half.to_string()))])), },
        BlockState::LargeFern { half } => _Self { name: Cow::Borrowed("minecraft:large_fern"), properties: Some(HashMap::from([(Cow::Borrowed("half"), Cow::Owned(half.to_string()))])), },
        BlockState::WhiteBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:white_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::OrangeBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:orange_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::MagentaBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:magenta_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::LightBlueBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:light_blue_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::YellowBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:yellow_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::LimeBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:lime_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::PinkBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:pink_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::GrayBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:gray_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::LightGrayBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:light_gray_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::CyanBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:cyan_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::PurpleBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:purple_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::BlueBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:blue_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::BrownBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:brown_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::GreenBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:green_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::RedBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:red_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::BlackBanner { rotation } => _Self { name: Cow::Borrowed("minecraft:black_banner"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string()))])), },
        BlockState::WhiteWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:white_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::OrangeWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:orange_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::MagentaWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:magenta_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LightBlueWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:light_blue_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::YellowWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:yellow_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LimeWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:lime_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PinkWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:pink_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::GrayWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:gray_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LightGrayWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:light_gray_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::CyanWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:cyan_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PurpleWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:purple_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BlueWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:blue_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BrownWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:brown_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::GreenWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:green_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::RedWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:red_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BlackWallBanner { facing } => _Self { name: Cow::Borrowed("minecraft:black_wall_banner"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::RedSandstone => _Self { name: Cow::Borrowed("minecraft:red_sandstone"), properties: None },
        BlockState::ChiseledRedSandstone => _Self { name: Cow::Borrowed("minecraft:chiseled_red_sandstone"), properties: None },
        BlockState::CutRedSandstone => _Self { name: Cow::Borrowed("minecraft:cut_red_sandstone"), properties: None },
        BlockState::RedSandstoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:red_sandstone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::OakSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:oak_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SpruceSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:spruce_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BirchSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:birch_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::JungleSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:jungle_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::AcaciaSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:acacia_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DarkOakSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dark_oak_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::StoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:stone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmoothStoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:smooth_stone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SandstoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:sandstone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CutSandstoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cut_sandstone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PetrifiedOakSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:petrified_oak_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CobblestoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cobblestone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::StoneBrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:stone_brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::NetherBrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:nether_brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::QuartzSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:quartz_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::RedSandstoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:red_sandstone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CutRedSandstoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cut_red_sandstone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PurpurSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:purpur_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmoothStone => _Self { name: Cow::Borrowed("minecraft:smooth_stone"), properties: None },
        BlockState::SmoothSandstone => _Self { name: Cow::Borrowed("minecraft:smooth_sandstone"), properties: None },
        BlockState::SmoothQuartz => _Self { name: Cow::Borrowed("minecraft:smooth_quartz"), properties: None },
        BlockState::SmoothRedSandstone => _Self { name: Cow::Borrowed("minecraft:smooth_red_sandstone"), properties: None },
        BlockState::SpruceFenceGate { facing, in_wall, open, powered } => _Self { name: Cow::Borrowed("minecraft:spruce_fence_gate"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("in_wall"), Cow::Owned(in_wall.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::BirchFenceGate { facing, in_wall, open, powered } => _Self { name: Cow::Borrowed("minecraft:birch_fence_gate"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("in_wall"), Cow::Owned(in_wall.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::JungleFenceGate { facing, in_wall, open, powered } => _Self { name: Cow::Borrowed("minecraft:jungle_fence_gate"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("in_wall"), Cow::Owned(in_wall.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::AcaciaFenceGate { facing, in_wall, open, powered } => _Self { name: Cow::Borrowed("minecraft:acacia_fence_gate"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("in_wall"), Cow::Owned(in_wall.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::DarkOakFenceGate { facing, in_wall, open, powered } => _Self { name: Cow::Borrowed("minecraft:dark_oak_fence_gate"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("in_wall"), Cow::Owned(in_wall.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::SpruceFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:spruce_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::BirchFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:birch_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::JungleFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:jungle_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::AcaciaFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:acacia_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::DarkOakFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:dark_oak_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::SpruceDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:spruce_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::BirchDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:birch_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::JungleDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:jungle_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::AcaciaDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:acacia_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::DarkOakDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:dark_oak_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::EndRod { facing } => _Self { name: Cow::Borrowed("minecraft:end_rod"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::ChorusPlant { down, east, north, south, up, west } => _Self { name: Cow::Borrowed("minecraft:chorus_plant"), properties: Some(HashMap::from([(Cow::Borrowed("down"), Cow::Owned(down.to_string())), (Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::ChorusFlower { age } => _Self { name: Cow::Borrowed("minecraft:chorus_flower"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::PurpurBlock => _Self { name: Cow::Borrowed("minecraft:purpur_block"), properties: None },
        BlockState::PurpurPillar { axis } => _Self { name: Cow::Borrowed("minecraft:purpur_pillar"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::PurpurStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:purpur_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::EndStoneBricks => _Self { name: Cow::Borrowed("minecraft:end_stone_bricks"), properties: None },
        BlockState::Beetroots { age } => _Self { name: Cow::Borrowed("minecraft:beetroots"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::DirtPath => _Self { name: Cow::Borrowed("minecraft:dirt_path"), properties: None },
        BlockState::EndGateway => _Self { name: Cow::Borrowed("minecraft:end_gateway"), properties: None },
        BlockState::RepeatingCommandBlock { conditional, facing } => _Self { name: Cow::Borrowed("minecraft:repeating_command_block"), properties: Some(HashMap::from([(Cow::Borrowed("conditional"), Cow::Owned(conditional.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::ChainCommandBlock { conditional, facing } => _Self { name: Cow::Borrowed("minecraft:chain_command_block"), properties: Some(HashMap::from([(Cow::Borrowed("conditional"), Cow::Owned(conditional.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::FrostedIce { age } => _Self { name: Cow::Borrowed("minecraft:frosted_ice"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::MagmaBlock => _Self { name: Cow::Borrowed("minecraft:magma_block"), properties: None },
        BlockState::NetherWartBlock => _Self { name: Cow::Borrowed("minecraft:nether_wart_block"), properties: None },
        BlockState::RedNetherBricks => _Self { name: Cow::Borrowed("minecraft:red_nether_bricks"), properties: None },
        BlockState::BoneBlock { axis } => _Self { name: Cow::Borrowed("minecraft:bone_block"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StructureVoid => _Self { name: Cow::Borrowed("minecraft:structure_void"), properties: None },
        BlockState::Observer { facing, powered } => _Self { name: Cow::Borrowed("minecraft:observer"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::ShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::WhiteShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:white_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::OrangeShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:orange_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::MagentaShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:magenta_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LightBlueShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:light_blue_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::YellowShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:yellow_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LimeShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:lime_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PinkShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:pink_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::GrayShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:gray_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LightGrayShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:light_gray_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::CyanShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:cyan_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PurpleShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:purple_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BlueShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:blue_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BrownShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:brown_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::GreenShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:green_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::RedShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:red_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BlackShulkerBox { facing } => _Self { name: Cow::Borrowed("minecraft:black_shulker_box"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::WhiteGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:white_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::OrangeGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:orange_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::MagentaGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:magenta_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LightBlueGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:light_blue_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::YellowGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:yellow_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LimeGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:lime_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PinkGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:pink_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::GrayGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:gray_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::LightGrayGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:light_gray_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::CyanGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:cyan_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::PurpleGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:purple_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BlueGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:blue_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BrownGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:brown_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::GreenGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:green_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::RedGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:red_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::BlackGlazedTerracotta { facing } => _Self { name: Cow::Borrowed("minecraft:black_glazed_terracotta"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::WhiteConcrete => _Self { name: Cow::Borrowed("minecraft:white_concrete"), properties: None },
        BlockState::OrangeConcrete => _Self { name: Cow::Borrowed("minecraft:orange_concrete"), properties: None },
        BlockState::MagentaConcrete => _Self { name: Cow::Borrowed("minecraft:magenta_concrete"), properties: None },
        BlockState::LightBlueConcrete => _Self { name: Cow::Borrowed("minecraft:light_blue_concrete"), properties: None },
        BlockState::YellowConcrete => _Self { name: Cow::Borrowed("minecraft:yellow_concrete"), properties: None },
        BlockState::LimeConcrete => _Self { name: Cow::Borrowed("minecraft:lime_concrete"), properties: None },
        BlockState::PinkConcrete => _Self { name: Cow::Borrowed("minecraft:pink_concrete"), properties: None },
        BlockState::GrayConcrete => _Self { name: Cow::Borrowed("minecraft:gray_concrete"), properties: None },
        BlockState::LightGrayConcrete => _Self { name: Cow::Borrowed("minecraft:light_gray_concrete"), properties: None },
        BlockState::CyanConcrete => _Self { name: Cow::Borrowed("minecraft:cyan_concrete"), properties: None },
        BlockState::PurpleConcrete => _Self { name: Cow::Borrowed("minecraft:purple_concrete"), properties: None },
        BlockState::BlueConcrete => _Self { name: Cow::Borrowed("minecraft:blue_concrete"), properties: None },
        BlockState::BrownConcrete => _Self { name: Cow::Borrowed("minecraft:brown_concrete"), properties: None },
        BlockState::GreenConcrete => _Self { name: Cow::Borrowed("minecraft:green_concrete"), properties: None },
        BlockState::RedConcrete => _Self { name: Cow::Borrowed("minecraft:red_concrete"), properties: None },
        BlockState::BlackConcrete => _Self { name: Cow::Borrowed("minecraft:black_concrete"), properties: None },
        BlockState::WhiteConcretePowder => _Self { name: Cow::Borrowed("minecraft:white_concrete_powder"), properties: None },
        BlockState::OrangeConcretePowder => _Self { name: Cow::Borrowed("minecraft:orange_concrete_powder"), properties: None },
        BlockState::MagentaConcretePowder => _Self { name: Cow::Borrowed("minecraft:magenta_concrete_powder"), properties: None },
        BlockState::LightBlueConcretePowder => _Self { name: Cow::Borrowed("minecraft:light_blue_concrete_powder"), properties: None },
        BlockState::YellowConcretePowder => _Self { name: Cow::Borrowed("minecraft:yellow_concrete_powder"), properties: None },
        BlockState::LimeConcretePowder => _Self { name: Cow::Borrowed("minecraft:lime_concrete_powder"), properties: None },
        BlockState::PinkConcretePowder => _Self { name: Cow::Borrowed("minecraft:pink_concrete_powder"), properties: None },
        BlockState::GrayConcretePowder => _Self { name: Cow::Borrowed("minecraft:gray_concrete_powder"), properties: None },
        BlockState::LightGrayConcretePowder => _Self { name: Cow::Borrowed("minecraft:light_gray_concrete_powder"), properties: None },
        BlockState::CyanConcretePowder => _Self { name: Cow::Borrowed("minecraft:cyan_concrete_powder"), properties: None },
        BlockState::PurpleConcretePowder => _Self { name: Cow::Borrowed("minecraft:purple_concrete_powder"), properties: None },
        BlockState::BlueConcretePowder => _Self { name: Cow::Borrowed("minecraft:blue_concrete_powder"), properties: None },
        BlockState::BrownConcretePowder => _Self { name: Cow::Borrowed("minecraft:brown_concrete_powder"), properties: None },
        BlockState::GreenConcretePowder => _Self { name: Cow::Borrowed("minecraft:green_concrete_powder"), properties: None },
        BlockState::RedConcretePowder => _Self { name: Cow::Borrowed("minecraft:red_concrete_powder"), properties: None },
        BlockState::BlackConcretePowder => _Self { name: Cow::Borrowed("minecraft:black_concrete_powder"), properties: None },
        BlockState::Kelp { age } => _Self { name: Cow::Borrowed("minecraft:kelp"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::KelpPlant => _Self { name: Cow::Borrowed("minecraft:kelp_plant"), properties: None },
        BlockState::DriedKelpBlock => _Self { name: Cow::Borrowed("minecraft:dried_kelp_block"), properties: None },
        BlockState::TurtleEgg { eggs, hatch } => _Self { name: Cow::Borrowed("minecraft:turtle_egg"), properties: Some(HashMap::from([(Cow::Borrowed("eggs"), Cow::Owned(eggs.to_string())), (Cow::Borrowed("hatch"), Cow::Owned(hatch.to_string()))])), },
        BlockState::DeadTubeCoralBlock => _Self { name: Cow::Borrowed("minecraft:dead_tube_coral_block"), properties: None },
        BlockState::DeadBrainCoralBlock => _Self { name: Cow::Borrowed("minecraft:dead_brain_coral_block"), properties: None },
        BlockState::DeadBubbleCoralBlock => _Self { name: Cow::Borrowed("minecraft:dead_bubble_coral_block"), properties: None },
        BlockState::DeadFireCoralBlock => _Self { name: Cow::Borrowed("minecraft:dead_fire_coral_block"), properties: None },
        BlockState::DeadHornCoralBlock => _Self { name: Cow::Borrowed("minecraft:dead_horn_coral_block"), properties: None },
        BlockState::TubeCoralBlock => _Self { name: Cow::Borrowed("minecraft:tube_coral_block"), properties: None },
        BlockState::BrainCoralBlock => _Self { name: Cow::Borrowed("minecraft:brain_coral_block"), properties: None },
        BlockState::BubbleCoralBlock => _Self { name: Cow::Borrowed("minecraft:bubble_coral_block"), properties: None },
        _ => from_chunk_3(state),
    }
}
fn from_chunk_3<'a>(state: &BlockState<'a>) -> _Self<'a> {
    match state {
        BlockState::FireCoralBlock => _Self { name: Cow::Borrowed("minecraft:fire_coral_block"), properties: None },
        BlockState::HornCoralBlock => _Self { name: Cow::Borrowed("minecraft:horn_coral_block"), properties: None },
        BlockState::DeadTubeCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_tube_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadBrainCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_brain_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadBubbleCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_bubble_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadFireCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_fire_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadHornCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_horn_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::TubeCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:tube_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BrainCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:brain_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BubbleCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:bubble_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::FireCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:fire_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::HornCoral { waterlogged } => _Self { name: Cow::Borrowed("minecraft:horn_coral"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadTubeCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_tube_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadBrainCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_brain_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadBubbleCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_bubble_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadFireCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_fire_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadHornCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_horn_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::TubeCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:tube_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BrainCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:brain_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BubbleCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:bubble_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::FireCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:fire_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::HornCoralFan { waterlogged } => _Self { name: Cow::Borrowed("minecraft:horn_coral_fan"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadTubeCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_tube_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadBrainCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_brain_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadBubbleCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_bubble_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadFireCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_fire_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeadHornCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:dead_horn_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::TubeCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:tube_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BrainCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:brain_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BubbleCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:bubble_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::FireCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:fire_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::HornCoralWallFan { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:horn_coral_wall_fan"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SeaPickle { pickles, waterlogged } => _Self { name: Cow::Borrowed("minecraft:sea_pickle"), properties: Some(HashMap::from([(Cow::Borrowed("pickles"), Cow::Owned(pickles.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BlueIce => _Self { name: Cow::Borrowed("minecraft:blue_ice"), properties: None },
        BlockState::Conduit { waterlogged } => _Self { name: Cow::Borrowed("minecraft:conduit"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BambooSapling => _Self { name: Cow::Borrowed("minecraft:bamboo_sapling"), properties: None },
        BlockState::Bamboo { age, leaves, stage } => _Self { name: Cow::Borrowed("minecraft:bamboo"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string())), (Cow::Borrowed("leaves"), Cow::Owned(leaves.to_string())), (Cow::Borrowed("stage"), Cow::Owned(stage.to_string()))])), },
        BlockState::PottedBamboo => _Self { name: Cow::Borrowed("minecraft:potted_bamboo"), properties: None },
        BlockState::VoidAir => _Self { name: Cow::Borrowed("minecraft:void_air"), properties: None },
        BlockState::CaveAir => _Self { name: Cow::Borrowed("minecraft:cave_air"), properties: None },
        BlockState::BubbleColumn { drag } => _Self { name: Cow::Borrowed("minecraft:bubble_column"), properties: Some(HashMap::from([(Cow::Borrowed("drag"), Cow::Owned(drag.to_string()))])), },
        BlockState::PolishedGraniteStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_granite_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmoothRedSandstoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:smooth_red_sandstone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::MossyStoneBrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:mossy_stone_brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedDioriteStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_diorite_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::MossyCobblestoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:mossy_cobblestone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::EndStoneBrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:end_stone_brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::StoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:stone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmoothSandstoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:smooth_sandstone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmoothQuartzStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:smooth_quartz_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::GraniteStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:granite_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::AndesiteStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:andesite_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::RedNetherBrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:red_nether_brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedAndesiteStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_andesite_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DioriteStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:diorite_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedGraniteSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_granite_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmoothRedSandstoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:smooth_red_sandstone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::MossyStoneBrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:mossy_stone_brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedDioriteSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_diorite_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::MossyCobblestoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:mossy_cobblestone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::EndStoneBrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:end_stone_brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmoothSandstoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:smooth_sandstone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmoothQuartzSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:smooth_quartz_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::GraniteSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:granite_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::AndesiteSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:andesite_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::RedNetherBrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:red_nether_brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedAndesiteSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_andesite_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DioriteSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:diorite_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BrickWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:brick_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::PrismarineWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:prismarine_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::RedSandstoneWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:red_sandstone_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::MossyStoneBrickWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:mossy_stone_brick_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::GraniteWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:granite_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::StoneBrickWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:stone_brick_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::NetherBrickWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:nether_brick_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::AndesiteWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:andesite_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::RedNetherBrickWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:red_nether_brick_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::SandstoneWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:sandstone_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::EndStoneBrickWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:end_stone_brick_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::DioriteWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:diorite_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::Scaffolding { bottom, distance, waterlogged } => _Self { name: Cow::Borrowed("minecraft:scaffolding"), properties: Some(HashMap::from([(Cow::Borrowed("bottom"), Cow::Owned(bottom.to_string())), (Cow::Borrowed("distance"), Cow::Owned(distance.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Loom { facing } => _Self { name: Cow::Borrowed("minecraft:loom"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Barrel { facing, open } => _Self { name: Cow::Borrowed("minecraft:barrel"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string()))])), },
        BlockState::Smoker { facing, lit } => _Self { name: Cow::Borrowed("minecraft:smoker"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::BlastFurnace { facing, lit } => _Self { name: Cow::Borrowed("minecraft:blast_furnace"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::CartographyTable => _Self { name: Cow::Borrowed("minecraft:cartography_table"), properties: None },
        BlockState::FletchingTable => _Self { name: Cow::Borrowed("minecraft:fletching_table"), properties: None },
        BlockState::Grindstone { face, facing } => _Self { name: Cow::Borrowed("minecraft:grindstone"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Lectern { facing, has_book, powered } => _Self { name: Cow::Borrowed("minecraft:lectern"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("has_book"), Cow::Owned(has_book.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::SmithingTable => _Self { name: Cow::Borrowed("minecraft:smithing_table"), properties: None },
        BlockState::Stonecutter { facing } => _Self { name: Cow::Borrowed("minecraft:stonecutter"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string()))])), },
        BlockState::Bell { attachment, facing, powered } => _Self { name: Cow::Borrowed("minecraft:bell"), properties: Some(HashMap::from([(Cow::Borrowed("attachment"), Cow::Owned(attachment.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::Lantern { hanging, waterlogged } => _Self { name: Cow::Borrowed("minecraft:lantern"), properties: Some(HashMap::from([(Cow::Borrowed("hanging"), Cow::Owned(hanging.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SoulLantern { hanging, waterlogged } => _Self { name: Cow::Borrowed("minecraft:soul_lantern"), properties: Some(HashMap::from([(Cow::Borrowed("hanging"), Cow::Owned(hanging.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Campfire { facing, lit, signal_fire, waterlogged } => _Self { name: Cow::Borrowed("minecraft:campfire"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("signal_fire"), Cow::Owned(signal_fire.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SoulCampfire { facing, lit, signal_fire, waterlogged } => _Self { name: Cow::Borrowed("minecraft:soul_campfire"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("signal_fire"), Cow::Owned(signal_fire.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SweetBerryBush { age } => _Self { name: Cow::Borrowed("minecraft:sweet_berry_bush"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::WarpedStem { axis } => _Self { name: Cow::Borrowed("minecraft:warped_stem"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedWarpedStem { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_warped_stem"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::WarpedHyphae { axis } => _Self { name: Cow::Borrowed("minecraft:warped_hyphae"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedWarpedHyphae { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_warped_hyphae"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::WarpedNylium => _Self { name: Cow::Borrowed("minecraft:warped_nylium"), properties: None },
        BlockState::WarpedFungus => _Self { name: Cow::Borrowed("minecraft:warped_fungus"), properties: None },
        BlockState::WarpedWartBlock => _Self { name: Cow::Borrowed("minecraft:warped_wart_block"), properties: None },
        BlockState::WarpedRoots => _Self { name: Cow::Borrowed("minecraft:warped_roots"), properties: None },
        BlockState::NetherSprouts => _Self { name: Cow::Borrowed("minecraft:nether_sprouts"), properties: None },
        BlockState::CrimsonStem { axis } => _Self { name: Cow::Borrowed("minecraft:crimson_stem"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedCrimsonStem { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_crimson_stem"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::CrimsonHyphae { axis } => _Self { name: Cow::Borrowed("minecraft:crimson_hyphae"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::StrippedCrimsonHyphae { axis } => _Self { name: Cow::Borrowed("minecraft:stripped_crimson_hyphae"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::CrimsonNylium => _Self { name: Cow::Borrowed("minecraft:crimson_nylium"), properties: None },
        BlockState::CrimsonFungus => _Self { name: Cow::Borrowed("minecraft:crimson_fungus"), properties: None },
        BlockState::Shroomlight => _Self { name: Cow::Borrowed("minecraft:shroomlight"), properties: None },
        BlockState::WeepingVines { age } => _Self { name: Cow::Borrowed("minecraft:weeping_vines"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::WeepingVinesPlant => _Self { name: Cow::Borrowed("minecraft:weeping_vines_plant"), properties: None },
        BlockState::TwistingVines { age } => _Self { name: Cow::Borrowed("minecraft:twisting_vines"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string()))])), },
        BlockState::TwistingVinesPlant => _Self { name: Cow::Borrowed("minecraft:twisting_vines_plant"), properties: None },
        BlockState::CrimsonRoots => _Self { name: Cow::Borrowed("minecraft:crimson_roots"), properties: None },
        BlockState::CrimsonPlanks => _Self { name: Cow::Borrowed("minecraft:crimson_planks"), properties: None },
        BlockState::WarpedPlanks => _Self { name: Cow::Borrowed("minecraft:warped_planks"), properties: None },
        BlockState::CrimsonSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:crimson_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WarpedSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:warped_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CrimsonPressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:crimson_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::WarpedPressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:warped_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::CrimsonFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:crimson_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::WarpedFence { east, north, south, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:warped_fence"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::CrimsonTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:crimson_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WarpedTrapdoor { facing, half, open, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:warped_trapdoor"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CrimsonFenceGate { facing, in_wall, open, powered } => _Self { name: Cow::Borrowed("minecraft:crimson_fence_gate"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("in_wall"), Cow::Owned(in_wall.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::WarpedFenceGate { facing, in_wall, open, powered } => _Self { name: Cow::Borrowed("minecraft:warped_fence_gate"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("in_wall"), Cow::Owned(in_wall.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::CrimsonStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:crimson_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WarpedStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:warped_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CrimsonButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:crimson_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::WarpedButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:warped_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::CrimsonDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:crimson_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::WarpedDoor { facing, half, hinge, open, powered } => _Self { name: Cow::Borrowed("minecraft:warped_door"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("hinge"), Cow::Owned(hinge.to_string())), (Cow::Borrowed("open"), Cow::Owned(open.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::CrimsonSign { rotation, waterlogged } => _Self { name: Cow::Borrowed("minecraft:crimson_sign"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WarpedSign { rotation, waterlogged } => _Self { name: Cow::Borrowed("minecraft:warped_sign"), properties: Some(HashMap::from([(Cow::Borrowed("rotation"), Cow::Owned(rotation.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CrimsonWallSign { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:crimson_wall_sign"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WarpedWallSign { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:warped_wall_sign"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::StructureBlock { mode } => _Self { name: Cow::Borrowed("minecraft:structure_block"), properties: Some(HashMap::from([(Cow::Borrowed("mode"), Cow::Owned(mode.to_string()))])), },
        BlockState::Jigsaw { orientation } => _Self { name: Cow::Borrowed("minecraft:jigsaw"), properties: Some(HashMap::from([(Cow::Borrowed("orientation"), Cow::Owned(orientation.to_string()))])), },
        BlockState::Composter { level } => _Self { name: Cow::Borrowed("minecraft:composter"), properties: Some(HashMap::from([(Cow::Borrowed("level"), Cow::Owned(level.to_string()))])), },
        BlockState::Target { power } => _Self { name: Cow::Borrowed("minecraft:target"), properties: Some(HashMap::from([(Cow::Borrowed("power"), Cow::Owned(power.to_string()))])), },
        BlockState::BeeNest { facing, honey_level } => _Self { name: Cow::Borrowed("minecraft:bee_nest"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("honey_level"), Cow::Owned(honey_level.to_string()))])), },
        BlockState::Beehive { facing, honey_level } => _Self { name: Cow::Borrowed("minecraft:beehive"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("honey_level"), Cow::Owned(honey_level.to_string()))])), },
        BlockState::HoneyBlock => _Self { name: Cow::Borrowed("minecraft:honey_block"), properties: None },
        BlockState::HoneycombBlock => _Self { name: Cow::Borrowed("minecraft:honeycomb_block"), properties: None },
        BlockState::NetheriteBlock => _Self { name: Cow::Borrowed("minecraft:netherite_block"), properties: None },
        BlockState::AncientDebris => _Self { name: Cow::Borrowed("minecraft:ancient_debris"), properties: None },
        BlockState::CryingObsidian => _Self { name: Cow::Borrowed("minecraft:crying_obsidian"), properties: None },
        BlockState::RespawnAnchor { charges } => _Self { name: Cow::Borrowed("minecraft:respawn_anchor"), properties: Some(HashMap::from([(Cow::Borrowed("charges"), Cow::Owned(charges.to_string()))])), },
        BlockState::PottedCrimsonFungus => _Self { name: Cow::Borrowed("minecraft:potted_crimson_fungus"), properties: None },
        BlockState::PottedWarpedFungus => _Self { name: Cow::Borrowed("minecraft:potted_warped_fungus"), properties: None },
        BlockState::PottedCrimsonRoots => _Self { name: Cow::Borrowed("minecraft:potted_crimson_roots"), properties: None },
        BlockState::PottedWarpedRoots => _Self { name: Cow::Borrowed("minecraft:potted_warped_roots"), properties: None },
        BlockState::Lodestone => _Self { name: Cow::Borrowed("minecraft:lodestone"), properties: None },
        BlockState::Blackstone => _Self { name: Cow::Borrowed("minecraft:blackstone"), properties: None },
        BlockState::BlackstoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:blackstone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BlackstoneWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:blackstone_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::BlackstoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:blackstone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedBlackstone => _Self { name: Cow::Borrowed("minecraft:polished_blackstone"), properties: None },
        BlockState::PolishedBlackstoneBricks => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_bricks"), properties: None },
        BlockState::CrackedPolishedBlackstoneBricks => _Self { name: Cow::Borrowed("minecraft:cracked_polished_blackstone_bricks"), properties: None },
        BlockState::ChiseledPolishedBlackstone => _Self { name: Cow::Borrowed("minecraft:chiseled_polished_blackstone"), properties: None },
        BlockState::PolishedBlackstoneBrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedBlackstoneBrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedBlackstoneBrickWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_brick_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::GildedBlackstone => _Self { name: Cow::Borrowed("minecraft:gilded_blackstone"), properties: None },
        BlockState::PolishedBlackstoneStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedBlackstoneSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedBlackstonePressurePlate { powered } => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_pressure_plate"), properties: Some(HashMap::from([(Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::PolishedBlackstoneButton { face, facing, powered } => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_button"), properties: Some(HashMap::from([(Cow::Borrowed("face"), Cow::Owned(face.to_string())), (Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string()))])), },
        BlockState::PolishedBlackstoneWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:polished_blackstone_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::ChiseledNetherBricks => _Self { name: Cow::Borrowed("minecraft:chiseled_nether_bricks"), properties: None },
        BlockState::CrackedNetherBricks => _Self { name: Cow::Borrowed("minecraft:cracked_nether_bricks"), properties: None },
        BlockState::QuartzBricks => _Self { name: Cow::Borrowed("minecraft:quartz_bricks"), properties: None },
        BlockState::Candle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WhiteCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:white_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::OrangeCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:orange_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::MagentaCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:magenta_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::LightBlueCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:light_blue_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::YellowCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:yellow_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::LimeCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:lime_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PinkCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:pink_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::GrayCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:gray_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::LightGrayCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:light_gray_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CyanCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cyan_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PurpleCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:purple_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BlueCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:blue_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BrownCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:brown_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::GreenCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:green_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::RedCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:red_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BlackCandle { candles, lit, waterlogged } => _Self { name: Cow::Borrowed("minecraft:black_candle"), properties: Some(HashMap::from([(Cow::Borrowed("candles"), Cow::Owned(candles.to_string())), (Cow::Borrowed("lit"), Cow::Owned(lit.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::WhiteCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:white_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::OrangeCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:orange_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::MagentaCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:magenta_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::LightBlueCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:light_blue_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::YellowCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:yellow_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        _ => from_chunk_4(state),
    }
}
fn from_chunk_4<'a>(state: &BlockState<'a>) -> _Self<'a> {
    match state {
        BlockState::LimeCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:lime_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::PinkCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:pink_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::GrayCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:gray_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::LightGrayCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:light_gray_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::CyanCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:cyan_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::PurpleCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:purple_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::BlueCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:blue_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::BrownCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:brown_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::GreenCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:green_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::RedCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:red_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::BlackCandleCake { lit } => _Self { name: Cow::Borrowed("minecraft:black_candle_cake"), properties: Some(HashMap::from([(Cow::Borrowed("lit"), Cow::Owned(lit.to_string()))])), },
        BlockState::AmethystBlock => _Self { name: Cow::Borrowed("minecraft:amethyst_block"), properties: None },
        BlockState::BuddingAmethyst => _Self { name: Cow::Borrowed("minecraft:budding_amethyst"), properties: None },
        BlockState::AmethystCluster { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:amethyst_cluster"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::LargeAmethystBud { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:large_amethyst_bud"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::MediumAmethystBud { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:medium_amethyst_bud"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmallAmethystBud { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:small_amethyst_bud"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::Tuff => _Self { name: Cow::Borrowed("minecraft:tuff"), properties: None },
        BlockState::Calcite => _Self { name: Cow::Borrowed("minecraft:calcite"), properties: None },
        BlockState::TintedGlass => _Self { name: Cow::Borrowed("minecraft:tinted_glass"), properties: None },
        BlockState::PowderSnow => _Self { name: Cow::Borrowed("minecraft:powder_snow"), properties: None },
        BlockState::SculkSensor { power, sculk_sensor_phase, waterlogged } => _Self { name: Cow::Borrowed("minecraft:sculk_sensor"), properties: Some(HashMap::from([(Cow::Borrowed("power"), Cow::Owned(power.to_string())), (Cow::Borrowed("sculk_sensor_phase"), Cow::Owned(sculk_sensor_phase.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::OxidizedCopper => _Self { name: Cow::Borrowed("minecraft:oxidized_copper"), properties: None },
        BlockState::WeatheredCopper => _Self { name: Cow::Borrowed("minecraft:weathered_copper"), properties: None },
        BlockState::ExposedCopper => _Self { name: Cow::Borrowed("minecraft:exposed_copper"), properties: None },
        BlockState::CopperBlock => _Self { name: Cow::Borrowed("minecraft:copper_block"), properties: None },
        BlockState::CopperOre => _Self { name: Cow::Borrowed("minecraft:copper_ore"), properties: None },
        BlockState::DeepslateCopperOre => _Self { name: Cow::Borrowed("minecraft:deepslate_copper_ore"), properties: None },
        BlockState::OxidizedCutCopper => _Self { name: Cow::Borrowed("minecraft:oxidized_cut_copper"), properties: None },
        BlockState::WeatheredCutCopper => _Self { name: Cow::Borrowed("minecraft:weathered_cut_copper"), properties: None },
        BlockState::ExposedCutCopper => _Self { name: Cow::Borrowed("minecraft:exposed_cut_copper"), properties: None },
        BlockState::CutCopper => _Self { name: Cow::Borrowed("minecraft:cut_copper"), properties: None },
        BlockState::OxidizedCutCopperStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:oxidized_cut_copper_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WeatheredCutCopperStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:weathered_cut_copper_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::ExposedCutCopperStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:exposed_cut_copper_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CutCopperStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cut_copper_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::OxidizedCutCopperSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:oxidized_cut_copper_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WeatheredCutCopperSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:weathered_cut_copper_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::ExposedCutCopperSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:exposed_cut_copper_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CutCopperSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cut_copper_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WaxedCopperBlock => _Self { name: Cow::Borrowed("minecraft:waxed_copper_block"), properties: None },
        BlockState::WaxedWeatheredCopper => _Self { name: Cow::Borrowed("minecraft:waxed_weathered_copper"), properties: None },
        BlockState::WaxedExposedCopper => _Self { name: Cow::Borrowed("minecraft:waxed_exposed_copper"), properties: None },
        BlockState::WaxedOxidizedCopper => _Self { name: Cow::Borrowed("minecraft:waxed_oxidized_copper"), properties: None },
        BlockState::WaxedOxidizedCutCopper => _Self { name: Cow::Borrowed("minecraft:waxed_oxidized_cut_copper"), properties: None },
        BlockState::WaxedWeatheredCutCopper => _Self { name: Cow::Borrowed("minecraft:waxed_weathered_cut_copper"), properties: None },
        BlockState::WaxedExposedCutCopper => _Self { name: Cow::Borrowed("minecraft:waxed_exposed_cut_copper"), properties: None },
        BlockState::WaxedCutCopper => _Self { name: Cow::Borrowed("minecraft:waxed_cut_copper"), properties: None },
        BlockState::WaxedOxidizedCutCopperStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:waxed_oxidized_cut_copper_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WaxedWeatheredCutCopperStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:waxed_weathered_cut_copper_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WaxedExposedCutCopperStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:waxed_exposed_cut_copper_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WaxedCutCopperStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:waxed_cut_copper_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WaxedOxidizedCutCopperSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:waxed_oxidized_cut_copper_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WaxedWeatheredCutCopperSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:waxed_weathered_cut_copper_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WaxedExposedCutCopperSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:waxed_exposed_cut_copper_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::WaxedCutCopperSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:waxed_cut_copper_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::LightningRod { facing, powered, waterlogged } => _Self { name: Cow::Borrowed("minecraft:lightning_rod"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("powered"), Cow::Owned(powered.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PointedDripstone { thickness, vertical_direction, waterlogged } => _Self { name: Cow::Borrowed("minecraft:pointed_dripstone"), properties: Some(HashMap::from([(Cow::Borrowed("thickness"), Cow::Owned(thickness.to_string())), (Cow::Borrowed("vertical_direction"), Cow::Owned(vertical_direction.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DripstoneBlock => _Self { name: Cow::Borrowed("minecraft:dripstone_block"), properties: None },
        BlockState::CaveVines { age, berries } => _Self { name: Cow::Borrowed("minecraft:cave_vines"), properties: Some(HashMap::from([(Cow::Borrowed("age"), Cow::Owned(age.to_string())), (Cow::Borrowed("berries"), Cow::Owned(berries.to_string()))])), },
        BlockState::CaveVinesPlant { berries } => _Self { name: Cow::Borrowed("minecraft:cave_vines_plant"), properties: Some(HashMap::from([(Cow::Borrowed("berries"), Cow::Owned(berries.to_string()))])), },
        BlockState::SporeBlossom => _Self { name: Cow::Borrowed("minecraft:spore_blossom"), properties: None },
        BlockState::Azalea => _Self { name: Cow::Borrowed("minecraft:azalea"), properties: None },
        BlockState::FloweringAzalea => _Self { name: Cow::Borrowed("minecraft:flowering_azalea"), properties: None },
        BlockState::MossCarpet => _Self { name: Cow::Borrowed("minecraft:moss_carpet"), properties: None },
        BlockState::MossBlock => _Self { name: Cow::Borrowed("minecraft:moss_block"), properties: None },
        BlockState::BigDripleaf { facing, tilt, waterlogged } => _Self { name: Cow::Borrowed("minecraft:big_dripleaf"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("tilt"), Cow::Owned(tilt.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::BigDripleafStem { facing, waterlogged } => _Self { name: Cow::Borrowed("minecraft:big_dripleaf_stem"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::SmallDripleaf { facing, half, waterlogged } => _Self { name: Cow::Borrowed("minecraft:small_dripleaf"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::HangingRoots { waterlogged } => _Self { name: Cow::Borrowed("minecraft:hanging_roots"), properties: Some(HashMap::from([(Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::RootedDirt => _Self { name: Cow::Borrowed("minecraft:rooted_dirt"), properties: None },
        BlockState::Deepslate { axis } => _Self { name: Cow::Borrowed("minecraft:deepslate"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::CobbledDeepslate => _Self { name: Cow::Borrowed("minecraft:cobbled_deepslate"), properties: None },
        BlockState::CobbledDeepslateStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cobbled_deepslate_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CobbledDeepslateSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:cobbled_deepslate_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::CobbledDeepslateWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:cobbled_deepslate_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::PolishedDeepslate => _Self { name: Cow::Borrowed("minecraft:polished_deepslate"), properties: None },
        BlockState::PolishedDeepslateStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_deepslate_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedDeepslateSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:polished_deepslate_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::PolishedDeepslateWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:polished_deepslate_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::DeepslateTiles => _Self { name: Cow::Borrowed("minecraft:deepslate_tiles"), properties: None },
        BlockState::DeepslateTileStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:deepslate_tile_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeepslateTileSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:deepslate_tile_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeepslateTileWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:deepslate_tile_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::DeepslateBricks => _Self { name: Cow::Borrowed("minecraft:deepslate_bricks"), properties: None },
        BlockState::DeepslateBrickStairs { facing, half, shape, waterlogged } => _Self { name: Cow::Borrowed("minecraft:deepslate_brick_stairs"), properties: Some(HashMap::from([(Cow::Borrowed("facing"), Cow::Owned(facing.to_string())), (Cow::Borrowed("half"), Cow::Owned(half.to_string())), (Cow::Borrowed("shape"), Cow::Owned(shape.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeepslateBrickSlab { r#type, waterlogged } => _Self { name: Cow::Borrowed("minecraft:deepslate_brick_slab"), properties: Some(HashMap::from([(Cow::Borrowed("type"), Cow::Owned(r#type.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string()))])), },
        BlockState::DeepslateBrickWall { east, north, south, up, waterlogged, west } => _Self { name: Cow::Borrowed("minecraft:deepslate_brick_wall"), properties: Some(HashMap::from([(Cow::Borrowed("east"), Cow::Owned(east.to_string())), (Cow::Borrowed("north"), Cow::Owned(north.to_string())), (Cow::Borrowed("south"), Cow::Owned(south.to_string())), (Cow::Borrowed("up"), Cow::Owned(up.to_string())), (Cow::Borrowed("waterlogged"), Cow::Owned(waterlogged.to_string())), (Cow::Borrowed("west"), Cow::Owned(west.to_string()))])), },
        BlockState::ChiseledDeepslate => _Self { name: Cow::Borrowed("minecraft:chiseled_deepslate"), properties: None },
        BlockState::CrackedDeepslateBricks => _Self { name: Cow::Borrowed("minecraft:cracked_deepslate_bricks"), properties: None },
        BlockState::CrackedDeepslateTiles => _Self { name: Cow::Borrowed("minecraft:cracked_deepslate_tiles"), properties: None },
        BlockState::InfestedDeepslate { axis } => _Self { name: Cow::Borrowed("minecraft:infested_deepslate"), properties: Some(HashMap::from([(Cow::Borrowed("axis"), Cow::Owned(axis.to_string()))])), },
        BlockState::SmoothBasalt => _Self { name: Cow::Borrowed("minecraft:smooth_basalt"), properties: None },
        BlockState::RawIronBlock => _Self { name: Cow::Borrowed("minecraft:raw_iron_block"), properties: None },
        BlockState::RawCopperBlock => _Self { name: Cow::Borrowed("minecraft:raw_copper_block"), properties: None },
        BlockState::RawGoldBlock => _Self { name: Cow::Borrowed("minecraft:raw_gold_block"), properties: None },
        BlockState::PottedAzaleaBush => _Self { name: Cow::Borrowed("minecraft:potted_azalea_bush"), properties: None },
        BlockState::PottedFloweringAzaleaBush => _Self { name: Cow::Borrowed("minecraft:potted_flowering_azalea_bush"), properties: None },
        BlockState::Other { name, properties } => _Self { name: name.to_owned(), properties: properties.to_owned() },
        _ => unreachable!(),
    }
}

impl <'a> From<&BlockState<'a>> for schema::BlockState<'a> {
    fn from(state: &BlockState<'a>) -> Self {
        from_chunk_0(state)
    }
}
